apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.baidu.k12edu"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    signingConfigs{
        release{
            storeFile file('../keystore/keystore.jks')
            storePassword '123456'
            keyAlias 'keystore'
            keyPassword '123456'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false //proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'//proguard

            signingConfig signingConfigs.release
        }
    }
    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/values-en'] } }

    assemble {
        doLast{
            println "apk is builded"
            createTheProduct();
        }
    }


}

def createTheProduct() {
    println "CopyReleaseApk productChannelApk"
    task("createTheProductTask", type: Exec) {
        String buildPath = project.getProjectDir().getParent() + File.separator;
        String pythonScript = buildPath + "BuildTools/build.py"
        String srcPath = buildPath + "app/build/outputs/apk/app-release.apk"
        String destPath = buildPath + "apks/"
        commandLine "python", "${pythonScript}", "${srcPath}", "${destPath}"
        doLast {
            println 'Congratulations, your final package in ‘BuildTools/multiChannel/outputs’'
        }
    }.execute()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.0.0'
}
